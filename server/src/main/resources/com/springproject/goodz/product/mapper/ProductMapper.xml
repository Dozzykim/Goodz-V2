<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.springproject.goodz.product.mapper.ProductMapper">
    
    <!-- 관리자 목록 조회 / 상품태그 검색 -->
    <select id="list" resultType="Product">
        SELECT *
          FROM product
         ORDER BY category DESC, created_at DESC
    </select>

    <!-- 상품 목록 조회 -->
    <select id="productList" resultType="Product">
        SELECT *
        FROM product
        WHERE b_name LIKE CONCAT('%', #{keyword}, '%')
        OR product_name LIKE CONCAT('%', #{keyword}, '%')
        ORDER BY p_no ASC
        LIMIT #{page.index}, #{page.rows}
    </select>

    <!-- 상품 목록 검색 - 상품태그 -->
    <select id="search" resultType="Product">
        SELECT *
        FROM product
        WHERE b_name LIKE CONCAT('%', #{keyword}, '%')
        OR product_name LIKE CONCAT('%', #{keyword}, '%')
        ORDER BY p_no ASC
    </select>

    <!-- 전체 데이터 개수 조회 -->
    <select id="getTotalCount" resultType="int">
        SELECT COUNT(*)
        FROM product
        WHERE b_name LIKE CONCAT('%', #{keyword}, '%')
        OR product_name LIKE CONCAT('%', #{keyword}, '%')
    </select>

    <!-- 메인화면에 4개 띄우기 -->
    <select id="newArrivals" resultType="Product">
        SELECT *
        FROM product
        ORDER BY created_at DESC
        LIMIT 4
    </select>

    <!-- 상품 등록 -->
    <insert id="insert" parameterType="Product" useGeneratedKeys="true" keyProperty="pNo">
    INSERT INTO product (category, b_name, product_name, initial_price)
    VALUES (#{category}, #{bName}, #{productName}, #{initialPrice})
    </insert>

    <!-- 상의 목록 -->
    <select id="top" resultType="Product">
        SELECT *
        FROM product
        WHERE category = 'top'
        ORDER BY created_at DESC
    </select>

    <!-- 하의 목록 -->
    <select id="pants" resultType="Product">
        SELECT *
        FROM product
        WHERE category = 'pants'
        ORDER BY created_at DESC
    </select>

    <!-- 신발 목록 -->
    <select id="shoes" resultType="Product">
        SELECT *
        FROM product
        WHERE category = 'shoes'
        ORDER BY created_at DESC
    </select>

    <!-- 악세사리 목록 -->
    <select id="accessory" resultType="Product">
        SELECT *
        FROM product
        WHERE category = 'accessory'
        ORDER BY created_at DESC
    </select>

    <!-- 제품 조회 -->
    <select id="getProductBypNo" resultType="Product">
        SELECT *
        FROM product
        WHERE p_no = #{pNo}
    </select>

    <!-- 제품과 최신 가격 변동 정보 조회 -->
    <select id="UsedInPay" resultType="Product">
        SELECT 
            p.*, ph.size, ph.fluctuated_price
        FROM 
            Product p
        INNER JOIN 
            Pricehistory ph ON p.p_no = ph.p_no
        WHERE 
            p.p_no = #{pNo} 
            AND ph.updated_at = (
                SELECT 
                    MAX(updated_at) 
                FROM 
                    Pricehistory 
                WHERE 
                    p_no = p.p_no
                    AND size = ph.size
            );
    </select>

    <select id="findSameBrandProducts" resultType="Product">
        SELECT *
          FROM product
         WHERE b_name = #{brand}
           AND category = #{category}
           AND p_no != #{pNo}
        ORDER BY created_at DESC
        LIMIT #{offset}, #{limit}
    </select>

    <update id="updateProduct">
        UPDATE product
        SET b_name = #{bName}, category = #{category}, product_name = #{productName}, initial_price = #{initialPrice}
        WHERE p_no = #{pNo}
    </update>

    <update id="updateOptionsByProductId" parameterType="ProductOption">
        UPDATE product_option
        SET option_price = #{optionPrice}, 
            stock_quantity = stock_quantity + #{stockQuantity}, 
            status = #{status}
        WHERE option_id = #{optionId} 
        AND p_no = #{pNo}
    </update>

    <select id="findUserWishList" resultType="Product">
        SELECT * 
          FROM product
         WHERE p_no = #{pNo}
    </select>
    
    <update id="updateViews">
        UPDATE product
           SET views = views + 1
         WHERE p_no = #{pNo}
    </update>
</mapper>
