<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.springproject.goodz.post.mapper.PostMapper">

    <resultMap type="Post" id="postMap">
        <id property="postNo" column="post_no" javaType="int" />
        <result property="userId" column="user_id" />
        <result property="nickname" column="nickname" />
        <result property="profileImgNo" column="profileImgNo" />
        <result property="content" column="content" />
        <result property="likeCount" column="likeCount" />
        <result property="wishCount" column="wishCount" />
        <collection property="tagList" resultMap="productMap" />
    </resultMap>

    <resultMap type="Product" id="productMap">
        <result property="pNo" column="product_no" />
    </resultMap>


    <!-- 전체 게시글 조회 - /styles  -->
    <select id="list" resultType="post">
        SELECT  p.post_no as post_no
              , p.user_id as user_id
              , u.nickname as nickname
              <!-- , u.profile_picture_url as profileImg -->
              , p.content as contetnt
              , f.no as file_no
              , f.file_name as file_name
              , f.file_path as file_path
              , f.file_code as file_code
              , IFNULL((SELECT count(*) from `like` l where l.post_no = p.post_no),0) as likeCount
              , IFNULL((SELECT count(*) from wishlist w where w.parent_no = p.post_no and w.parent_table = 'post'),0) as wishCount
        FROM post p
        INNER JOIN file f on post_no = parent_no and f.parent_table='post' and file_code = 1
        INNER JOIN user u on p.user_id = u.user_id
        ORDER BY p.created_at DESC
    </select>

    <!-- 게시글 상세 조회 - /styles/게시글번호  -->
    <select id="select" resultMap="postMap">
        SELECT p.post_no
             , user_id
             , content
             , IFNULL((SELECT count(*) from `like` l where l.post_no = p.post_no),0) as likeCount
             , IFNULL((SELECT count(*) from wishlist w where w.parent_no = p.post_no and w.parent_table = 'post'),0) as wishCount
             , ifNull(t.p_no, null) as product_no
        FROM post p
        LEFT OUTER JOIN tag t ON p.post_no = t.post_no
        WHERE p.post_no = #{postNo};
    </select>
    <!-- <select id="select" resultType="post">
        SELECT post_no
             , user_id
             , content
             , IFNULL((SELECT count(*) from `like` l where l.post_no = p.post_no),0) as likeCount
             , IFNULL((SELECT count(*) from wishlist w where w.parent_no = p.post_no and w.parent_table = 'post'),0) as wishCount
        FROM post p
        WHERE post_no = #{postNo};
    </select> -->

    <!-- 프로필 유저의 게시글 조회 - /styles/user/@유저닉네임  -->
    <select id="selectById" resultType="post">
        SELECT  p.post_no as post_no
              , p.user_id as user_id
              , p.content as contetnt
              , f.no as file_no
              , f.file_name as file_name
              , f.file_path as file_path
              , f.file_code as file_code
              , IFNULL((SELECT count(*) from `like` l where l.post_no = p.post_no),0) as likeCount
              , IFNULL((SELECT count(*) from wishlist w where w.parent_no = p.post_no and w.parent_table = 'post'),0) as wishCount
        FROM post p
        INNER JOIN file f on post_no = parent_no and f.parent_table='post' and user_id = #{userId} and file_code = 1
    </select>

    <!-- 최근 등록한 게시글 번호 - 첨부파일 등록 시 필요 -->
    <select id="maxNo">
        SELECT max(post_no) as maxNo
        FROM post
    </select>

    <!-- 게시글 등록 -->
    <insert id="insert">
        INSERT INTO post (user_id, content)
        VALUES (#{userId}, #{content})
    </insert>

    <!-- 게시글 수정 -->
    <update id="update">
        UPDATE post
           SET content = #{content}
        WHERE post_no = #{postNo}
    </update>

    <!-- 게시글 삭제 -->
    <delete id="delete">
        DELETE FROM post
        WHERE post_no = #{postNo}
    </delete>

    <!-- 인기게시글 4개 - 메인화면 조회용 -->
    <select id="popularPosts" resultType="post">
        <!-- SELECT post_no
              ,COUNT(*) AS like_count
        FROM  `like`
        GROUP BY post_no
        ORDER BY like_count DESC
        LIMIT 4; -->
        SELECT  p.post_no as post_no
              , p.user_id as user_id
              , u.nickname as nickname
              , ifNull((select no from file f where u.no = f.parent_no and parent_table = "user"),0) as profileImgNo
              , p.content as contetnt
              , f.no as file_no
              , f.file_name as file_name
              , f.file_path as file_path
              , f.file_code as file_code
              , IFNULL((SELECT count(*) from `like` l where l.post_no = p.post_no),0) as likeCount
              , IFNULL((SELECT count(*) from wishlist w where w.parent_no = p.post_no and w.parent_table = 'post'),0) as wishCount
        FROM post p
        INNER JOIN file f on post_no = parent_no and f.parent_table='post' and file_code = 1
        INNER JOIN user u on p.user_id = u.user_id
        ORDER BY likeCount DESC
        LIMIT #{offset}, #{size}
    </select>

    <!-- 게시글 조회 (대표이미지파일 번호 포함) - 게시글 번호 기준  -->
    <select id="taggedPost" resultType="post">
        SELECT  p.post_no as post_no
              , p.user_id as user_id
              , u.nickname as nickname
              , ifNull((select no from file f where u.no = f.parent_no and parent_table = "user"),0) as profileImgNo
              , p.content as content
              , f.no as file_no
              , f.file_name as file_name
              , f.file_path as file_path
              , f.file_code as file_code
              , IFNULL((SELECT COUNT(*) from `like` l where l.post_no = p.post_no),0) as likeCount
              , IFNULL((SELECT COUNT(*) from wishlist w where w.parent_no = p.post_no and w.parent_table = 'post'),0) as wishCount
              , t.p_no
        FROM post p
        INNER JOIN file f on post_no = parent_no and f.parent_table='post' and file_code = 1
        INNER JOIN user u on p.user_id = u.user_id
        LEFT OUTER JOIN tag t on p.post_no = t.post_no
		where t.p_no = #{pNo}
        order by likeCount DESC, p.created_at DESC
        limit 4;
    </select>
</mapper>