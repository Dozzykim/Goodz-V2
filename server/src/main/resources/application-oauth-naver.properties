#naver OAuth Settings

client-id : REST API KEY
spring.security.oauth2.client.registration.naver.client-id=e_e63bLcJ1HAO0nC06uM
# client-secret : 내 애플리케이션 > 보안 > Client secret
spring.security.oauth2.client.registration.naver.client-secret=92d5L7CsOk

# redirect-uri : 사용자가 네이버로 로그인 후 돌아올 서버의 URL
spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:8080/login/oauth2/code/naver

# authorization-grant-type : 액세스 토큰 요청 시, 유형을 지정하는 헤더 속성
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code

# scope : 사용자 정보 요청 범위를 지정하는 속성
spring.security.oauth2.client.registration.naver.scope=profile_nickname, profile_image

# client-name : 클라이언트를 구분하기 위한 이름
spring.security.oauth2.client.registration.naver.client-name=naver
# client-authentication-method : 인증 서버로 요청 시, 지정할 요청 메소드
# spring.security.oauth2.client.registration.naver.client-authentication-method=POST

# authorization-uri : 인가 코드 요청 URI (인증 서버)
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
# token-uri : 액세스 토큰 요청 URI (인증 서버)
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
# user-info-uri : 사용자 정보 요청 URI (리소스 서버)
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
# user-name-attribute : 사용자 정보를 고유 식별하는 키 속성
spring.security.oauth2.client.provider.naver.user-name-attribute=response

# spring.security.oauth2.client.registration.naver.client-id=e_e63bLcJ1HAO0nC06uM
# spring.security.oauth2.client.registration.naver.client-secret=92d5L7CsOk
# spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:8080/login/oauth2/code/naver
# spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
# spring.security.oauth2.client.registration.naver.scope=profile_nickname,profile_image
# spring.security.oauth2.client.registration.naver.client-name=naver
# spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
# spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
# spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
# spring.security.oauth2.client.provider.naver.user-name-attribute=response

